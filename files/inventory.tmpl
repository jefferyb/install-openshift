[OSEv3:children]
masters
nodes
etcd
{% if nfs_ip_addresses is defined %}
nfs
{% endif %}
{% if new_nodes_ip_addresses is defined %}
new_nodes
{% endif %}

{% if nfs_ip_addresses is defined %}
[nfs]
{{ nfs_ip_addresses }}
{% endif %}

[masters]
{% for ip in masters_ip_addresses %}
{{ ip.external }} openshift_ip={{ ip.internal }} openshift_hostname={{ ip.internal }} openshift_schedulable={{ ip.schedulable }}
{% endfor %}


[etcd]
{% for ip in masters_ip_addresses %}
{{ ip.external }} openshift_ip={{ ip.internal }}
{% endfor %}


[nodes]
{% for ip in masters_ip_addresses %}
{{ ip.external }} openshift_ip={{ ip.internal }} openshift_hostname={{ ip.internal }} openshift_schedulable={{ ip.schedulable }} openshift_node_labels="{{ ip.node_labels }}"
{% endfor %}
{% if nodes_ip_addresses is defined %}
{% for ip in nodes_ip_addresses %}
{{ ip.external }} openshift_ip={{ ip.internal }} openshift_hostname={{ ip.internal }} openshift_node_labels="{{ ip.node_labels }}"
{% endfor %}
{% endif %}


{% if new_nodes_ip_addresses is defined %}
[new_nodes]
{% for ip in new_nodes_ip_addresses %}
{{ ip.external }} openshift_ip={{ ip.internal }} openshift_hostname={{ ip.internal }} openshift_node_labels="{{ ip.node_labels }}"
{% endfor %}
{% endif %}

[OSEv3:vars]
ansible_ssh_user={{ SSH_USER }}
ansible_become=yes
ansible_become_user=root
enable_excluders=False
enable_docker_excluder=False
ansible_service_broker_install=False

# Debug level for all OpenShift components (Defaults to 2)
# debug_level=5
openshift_hostname_check=false
openshift_clusterid=shazaam

containerized=True
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability

# ref: https://docs.openshift.org/latest/scaling_performance/host_practices.html#scaling-performance-capacity-host-practices-node
# To Disable it, set it to 0 -> openshift_node_kubelet_args={'pods-per-core': ['0']}
openshift_node_kubelet_args={'pods-per-core': ['10']}

deployment_type=origin
openshift_deployment_type=origin

openshift_router_selector='region=infra'
openshift_registry_selector='region=infra'
{% if builddefaults_nodeselectors is defined %}
### Configuring Global Build Defaults with Ansible
# ref: https://docs.openshift.org/latest/install_config/build_defaults_overrides.html#ansible-setting-global-build-defaults
openshift_builddefaults_nodeselectors={{ builddefaults_nodeselectors }}
{% endif %}

openshift_release={{ VERSION }}
openshift_pkg_version={{ VERSION }}
openshift_image_tag={{ VERSION }}

### Configuring the Service Catalog
# ref: https://docs.openshift.org/latest/install_config/install/advanced_install.html#enabling-service-catalog
{% if enable_service_catalog %}
openshift_service_catalog_image_version={{ VERSION }}
template_service_broker_image_version={{ VERSION }}
template_service_broker_selector={"region":"infra"}
{% else %}
openshift_enable_service_catalog=false
openshift_service_catalog_image_prefix=openshift/origin-
openshift_service_catalog_image_version=latest
{% endif %}

openshift_metrics_image_version={{ METRIC_LOGGING_VERSION }}
openshift_logging_image_version={{ METRIC_LOGGING_VERSION }}
openshift_logging_elasticsearch_proxy_image_version=latest

openshift_metrics_install_metrics={{ INSTALL_METRICS }}
openshift_logging_install_logging={{ INSTALL_LOGGING }}

osm_use_cockpit=true

openshift_public_hostname=console.{{ DOMAIN }}
openshift_master_default_subdomain={{ DOMAIN }}
openshift_master_api_port={{ API_PORT }}
openshift_master_console_port={{ API_PORT }}

### AUTHENTICATION 
{% if USE_HTPASSWD_AUTH %}
# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
{% endif %}
{% if USE_LDAP_AUTH %}
# LDAP auth
openshift_master_identity_providers=[{'name': 'ldap_provider', 'challenge': 'true', 'login': 'true', 'mappingMethod': 'add', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': '', 'bindPassword': '', 'ca': '', 'insecure': 'false', 'url': '{{ LDAP_URL }}'}]
{% endif %}

{% if USE_CERTIFICATES %}
### SSL Certificates related section
# REF: http://v1.uncontained.io/playbooks/installation/custom_certificates.html
openshift_master_cluster_hostname="console.{{ DOMAIN }}"
openshift_master_cluster_public_hostname="console.{{ DOMAIN }}"
openshift_master_ca_certificate={'certfile': '{{ OC_CA_CERTIFICATE }}', 'keyfile': '{{ OC_KEY_CERTIFICATE }}'}

# Master API Certificate
openshift_master_overwrite_named_certificates=true
openshift_master_named_certificates=[{"certfile": "{{ OC_CRT_CERTIFICATE }}", "keyfile": "{{ OC_KEY_CERTIFICATE }}", "names": ["*.{{ DOMAIN }}"], "cafile": "{{ OC_CA_CERTIFICATE }}"}]

# Registry Certificate
openshift_hosted_registry_routehost="registry.{{ DOMAIN }}"
openshift_hosted_registry_routetermination=reencrypt
openshift_hosted_registry_routecertificates={"certfile": "{{ OC_CRT_CERTIFICATE }}", "keyfile": "{{ OC_KEY_CERTIFICATE }}", "cafile": "{{ OC_CA_CERTIFICATE }}"}

# Default (Wildcard) Router Certificate
# openshift_hosted_router_certificate={"certfile": "{{ OC_CRT_CERTIFICATE }}", "keyfile": "{{ OC_KEY_CERTIFICATE }}", "cafile": "{{ OC_CA_CERTIFICATE }}"}

### LOGGING & METRICS CERTS
openshift_logging_kibana_cert="{{ OC_CRT_CERTIFICATE }}"
openshift_logging_kibana_key="{{ OC_KEY_CERTIFICATE }}"
openshift_logging_kibana_ca="{{ OC_CA_CERTIFICATE }}"

openshift_metrics_hawkular_cert="{{ OC_CRT_CERTIFICATE }}"
openshift_metrics_hawkular_key="{{ OC_KEY_CERTIFICATE }}"
openshift_metrics_hawkular_ca="{{ OC_CA_CERTIFICATE }}"
{% endif %}
